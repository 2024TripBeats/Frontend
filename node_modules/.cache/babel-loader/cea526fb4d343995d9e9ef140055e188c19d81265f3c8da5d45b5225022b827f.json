{"ast":null,"code":"var _jsxFileName = \"/Users/kimjisu/Desktop/TripBeats/tripbeats/src/component/page/TasteSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    min-height: 100vh;\n    padding: 20px;\n    background-color: #D3E8F7;\n    box-sizing: border-box;\n`;\n_c = Container;\nconst Title = styled.div`\n  font-size: 25px;\n  font-family: \"Pretendard-ExtraBold\";\n  color: #252A2F;\n`;\n_c2 = Title;\nconst ImgPicker = styled.div`\n  display: flex;\n  position: relative;\n  flex: 1;\n  margin: 5px;\n`;\nconst ImgContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-top: 5%;\n  gap: 5%;\n  width: 100%;\n  flex-wrap: wrap;\n`;\nconst Img = styled.img`\n  width: 100%;\n  border-radius: 5%;\n  position: relative;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n`;\nconst RankBadge = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background-color: rgba(255, 255, 255, 0.7);\n  color: black;\n  border-radius: 50%;\n  width: 25px;\n  height: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n`;\nconst TasteSurvey = () => {\n  _s();\n  const [ranks, setRanks] = useState(Array(5).fill(null));\n  const handleClick = index => {\n    const newRanks = ranks.slice();\n    if (newRanks[index] !== null) {\n      // 이미 클릭된 이미지를 다시 클릭하여 랭크를 제거하는 경우\n      const removedRank = newRanks[index];\n      newRanks[index] = null;\n      // 모든 랭크를 조정하여 연속성을 유지\n      for (let i = 0; i < newRanks.length; i++) {\n        if (newRanks[i] > removedRank) {\n          newRanks[i]--;\n        }\n      }\n    } else {\n      // 새로운 이미지를 클릭하여 랭크를 할당하는 경우\n      const nextRank = newRanks.filter(rank => rank !== null).length + 1;\n      newRanks[index] = nextRank;\n    }\n    setRanks(newRanks);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uC5B4\\uB5A4 \\uC5EC\\uD589\\uC744 \\uC8FC\\uB85C \\uB2E4\\uB2C8\\uC168\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(TasteSurvey, \"bm2FMrMcgMcZ0CRCYFepAd5IYJM=\");\n_c3 = TasteSurvey;\nexport default TasteSurvey;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TasteSurvey\");","map":{"version":3,"names":["React","useState","styled","Navigate","jsxDEV","_jsxDEV","Container","div","_c","Title","_c2","ImgPicker","ImgContainer","Img","img","RankBadge","TasteSurvey","_s","ranks","setRanks","Array","fill","handleClick","index","newRanks","slice","removedRank","i","length","nextRank","filter","rank","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/kimjisu/Desktop/TripBeats/tripbeats/src/component/page/TasteSurvey.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport { Navigate } from 'react-router-dom';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    min-height: 100vh;\n    padding: 20px;\n    background-color: #D3E8F7;\n    box-sizing: border-box;\n`;\n\nconst Title = styled.div`\n  font-size: 25px;\n  font-family: \"Pretendard-ExtraBold\";\n  color: #252A2F;\n`;\n\nconst ImgPicker = styled.div`\n  display: flex;\n  position: relative;\n  flex: 1;\n  margin: 5px;\n`;\n\nconst ImgContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-top: 5%;\n  gap: 5%;\n  width: 100%;\n  flex-wrap: wrap;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  border-radius: 5%;\n  position: relative;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);\n`;\n\nconst RankBadge = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background-color: rgba(255, 255, 255, 0.7);\n  color: black;\n  border-radius: 50%;\n  width: 25px;\n  height: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n`;\n\nconst TasteSurvey = () => {\n  const [ranks, setRanks] = useState(Array(5).fill(null));\n\n  const handleClick = (index) => {\n    const newRanks = ranks.slice();\n    if (newRanks[index] !== null) {\n      // 이미 클릭된 이미지를 다시 클릭하여 랭크를 제거하는 경우\n      const removedRank = newRanks[index];\n      newRanks[index] = null;\n      // 모든 랭크를 조정하여 연속성을 유지\n      for (let i = 0; i < newRanks.length; i++) {\n        if (newRanks[i] > removedRank) {\n          newRanks[i]--;\n        }\n      }\n    } else {\n      // 새로운 이미지를 클릭하여 랭크를 할당하는 경우\n      const nextRank = newRanks.filter(rank => rank !== null).length + 1;\n      newRanks[index] = nextRank;\n    }\n    setRanks(newRanks);\n  };\n\n  return (\n    <Container>\n      <Title>어떤 여행을 주로 다니셨나요?</Title>\n    </Container>\n  );\n};\n\nexport default TasteSurvey;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,SAAS;AAUf,MAAMG,KAAK,GAAGP,MAAM,CAACK,GAAG;AACxB;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,KAAK;AAMX,MAAME,SAAS,GAAGT,MAAM,CAACK,GAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,YAAY,GAAGV,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMM,GAAG,GAAGX,MAAM,CAACY,GAAG;AACtB;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,SAAS,GAAGb,MAAM,CAACK,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAEvD,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,QAAQ,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC9B,IAAID,QAAQ,CAACD,KAAK,CAAC,KAAK,IAAI,EAAE;MAC5B;MACA,MAAMG,WAAW,GAAGF,QAAQ,CAACD,KAAK,CAAC;MACnCC,QAAQ,CAACD,KAAK,CAAC,GAAG,IAAI;MACtB;MACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC,IAAIH,QAAQ,CAACG,CAAC,CAAC,GAAGD,WAAW,EAAE;UAC7BF,QAAQ,CAACG,CAAC,CAAC,EAAE;QACf;MACF;IACF,CAAC,MAAM;MACL;MACA,MAAME,QAAQ,GAAGL,QAAQ,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC,CAACH,MAAM,GAAG,CAAC;MAClEJ,QAAQ,CAACD,KAAK,CAAC,GAAGM,QAAQ;IAC5B;IACAV,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEnB,OAAA,CAACC,SAAS;IAAA0B,QAAA,eACR3B,OAAA,CAACI,KAAK;MAAAuB,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEhB,CAAC;AAACnB,EAAA,CA5BID,WAAW;AAAAqB,GAAA,GAAXrB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAR,EAAA,EAAAE,GAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}