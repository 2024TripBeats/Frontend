{"ast":null,"code":"var _jsxFileName = \"/Users/kimjisu/Desktop/TripBeats/tripbeats/src/component/page/LoginHandeler.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginHandeler = props => {\n  _s();\n  const navigate = useNavigate();\n  const code = new URL(window.location.href).searchParams.get(\"code\");\n\n  //인가코드 백으로 보내는 코드\n  useEffect(() => {\n    const kakaoLogin = async () => {\n      await axios({\n        method: \"GET\",\n        url: `${process.env.REACT_APP_REDIRECT_URL}/?code=${code}`,\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n          //json형태로 데이터를 보내겠다는뜻\n          \"Access-Control-Allow-Origin\": \"*\" //이건 cors 에러때문에 넣어둔것. 당신의 프로젝트에 맞게 지워도됨\n        }\n      }).then(res => {\n        //백에서 완료후 우리사이트 전용 토큰 넘겨주는게 성공했다면\n        console.log(res);\n        //계속 쓸 정보들( ex: 이름) 등은 localStorage에 저장해두자\n        localStorage.setItem(\"name\", res.data.account.kakaoName);\n        //로그인이 성공하면 이동할 페이지\n        navigate(\"/home\");\n      });\n    };\n    kakaoLogin();\n  }, [props.history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginHandeler\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notice\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginHandeler, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginHandeler;\nexport default LoginHandeler;\nvar _c;\n$RefreshReg$(_c, \"LoginHandeler\");","map":{"version":3,"names":["useNavigate","useEffect","axios","jsxDEV","_jsxDEV","LoginHandeler","props","_s","navigate","code","URL","window","location","href","searchParams","get","kakaoLogin","method","url","process","env","REACT_APP_REDIRECT_URL","headers","then","res","console","log","localStorage","setItem","data","account","kakaoName","history","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimjisu/Desktop/TripBeats/tripbeats/src/component/page/LoginHandeler.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst LoginHandeler = (props) => {\n  const navigate = useNavigate();\n  const code = new URL(window.location.href).searchParams.get(\"code\");\n\n//인가코드 백으로 보내는 코드\n  useEffect(() => {\n    const kakaoLogin = async () => {\n      await axios({\n        method: \"GET\",\n        url: `${process.env.REACT_APP_REDIRECT_URL}/?code=${code}`,\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\", //json형태로 데이터를 보내겠다는뜻\n          \"Access-Control-Allow-Origin\": \"*\", //이건 cors 에러때문에 넣어둔것. 당신의 프로젝트에 맞게 지워도됨\n        },\n      }).then((res) => { //백에서 완료후 우리사이트 전용 토큰 넘겨주는게 성공했다면\n        console.log(res);\n        //계속 쓸 정보들( ex: 이름) 등은 localStorage에 저장해두자\n        localStorage.setItem(\"name\", res.data.account.kakaoName);\n        //로그인이 성공하면 이동할 페이지\n        navigate(\"/home\");\n      });\n    };\n    kakaoLogin();\n  }, [props.history]);\n\n  return (\n    <div className=\"LoginHandeler\">\n      <div className=\"notice\">\n        <p>로그인 중입니다.</p>\n        <p>잠시만 기다려주세요.</p>\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginHandeler;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC;;EAErE;EACEd,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMd,KAAK,CAAC;QACVe,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,UAAUZ,IAAI,EAAE;QAC1Da,OAAO,EAAE;UACP,cAAc,EAAE,gCAAgC;UAAE;UAClD,6BAA6B,EAAE,GAAG,CAAE;QACtC;MACF,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QAAE;QACjBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB;QACAG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEJ,GAAG,CAACK,IAAI,CAACC,OAAO,CAACC,SAAS,CAAC;QACxD;QACAvB,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC;IACDQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACV,KAAK,CAAC0B,OAAO,CAAC,CAAC;EAEnB,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B9B,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB9B,OAAA;QAAA8B,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChBlC,OAAA;QAAA8B,QAAA,EAAG;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClBlC,OAAA;QAAK6B,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlCIF,aAAa;EAAA,QACAL,WAAW;AAAA;AAAAuC,EAAA,GADxBlC,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}